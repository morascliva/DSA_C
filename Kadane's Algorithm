Given an array Arr[] of N integers. Find the contiguous sub-array(containing at least one number) which has the maximum sum and return
its sum


Input:
N = 5
Arr[] = {1,2,3,-2,5}
Output:
9
Explanation:
Max subarray sum is 9
of elements (1, 2, 3, -2, 5) which 
is a contiguous subarray.


#include <stdio.h>

int maxSubArraySum(int arr[], int n) {
    int cursum = arr[0];
    int maxsum = arr[0];

    for (int i = 1; i < n; i++) {
        if (arr[i] > cursum + arr[i]) {
            cursum = arr[i];
        } else {
            cursum = cursum + arr[i];
        }


        if (maxsum < cursum) 
        {
        maxsum=maxsum+cursum;
        }
    }

    return maxsum;
}

int main() {
    int arr[] = {-2, 1, -3, -4, -1};
    int n = sizeof(arr) / sizeof(arr[0]);

    int maxSum = maxSubArraySum(arr, n);

    printf("Maximum subarray sum: %d\n", maxSum);

    return 0;
}
